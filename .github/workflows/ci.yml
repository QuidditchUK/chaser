name: Vercel Preview URL Lighthouse Audit

on:
  issue_comment:
    types: [edited]

jobs:
  generate_lighthouse_audit:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Add comment to PR
        id: loading_comment_to_pr
        uses: marocchino/sticky-pull-request-comment@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.issue.number }}
          header: lighthouse
          message: |
            Running Lighthouse audit...
      - name: Capture Vercel preview URL
        id: vercel_preview_url
        uses: aaron-binary/vercel-preview-url-action@v0.0.3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v2
      - name: Audit preview URL with Lighthouse
        id: lighthouse_audit
        uses: treosh/lighthouse-ci-action@v3
        with:
          urls: |
            ${{ steps.vercel_preview_url.outputs.vercel_preview_url }}
          uploadArtifacts: true
          temporaryPublicStorage: true
          runs: 3
      - name: Format lighthouse score
        id: format_lighthouse_score
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const result = ${{ steps.lighthouse_audit.outputs.manifest }}[0].summary
            const resultTwo = ${{ steps.lighthouse_audit.outputs.manifest }}[1].summary
            const resultThree = ${{ steps.lighthouse_audit.outputs.manifest }}[2].summary
            const links = ${{ steps.lighthouse_audit.outputs.links }}
            const formatResult = (res) => Math.round((res * 100))
            Object.keys(result).forEach(key => result[key] = formatResult(result[key]))
            Object.keys(resultTwo).forEach(key => resultTwo[key] = formatResult(resultTwo[key]))
            Object.keys(resultThree).forEach(key => resultThree[key] = formatResult(resultThree[key]))
            const score = res => res >= 90 ? 'üü¢' : res >= 50 ? 'üü†' : 'üî¥'
            const comment = [
                `‚ö°Ô∏è[Lighthouse Report](${Object.values(links)[0]}) for the changes in this PR:`,
                '| Category | Run 1 / Run 2 / Run 3 |',
                '| --- | --- |',
                `| ${score(result.performance)} Performance | ${result.performance} / ${resultTwo.performance} / ${resultThree.performance} |`,
                `| ${score(result.accessibility)} Accessibility | ${result.accessibility} / ${resultTwo.accessibility} / ${resultThree.accessibility} |`,
                `| ${score(result['best-practices'])} Best practices | ${result['best-practices']} / ${resultTwo['best-practices']} / ${resultThree['best-practices']} |`,
                `| ${score(result.seo)} SEO | ${result.seo} / ${resultTwo.seo} / ${resultThree.seo} |`,
                `| ${score(result.pwa)} PWA | ${result.pwa} / ${resultTwo.pwa} / ${resultThree.pwa} |`,
                ' ',
                `*Lighthouse ran on [${Object.keys(links)[0]}](${Object.keys(links)[0]})*`
            ].join('\n')
             core.setOutput("comment", comment); 
      - name: Add comment to PR
        id: comment_to_pr
        uses: marocchino/sticky-pull-request-comment@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.issue.number }}
          header: lighthouse
          message: |
            ${{ steps.format_lighthouse_score.outputs.comment }}